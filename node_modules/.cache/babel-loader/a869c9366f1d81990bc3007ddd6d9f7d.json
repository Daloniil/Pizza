{"ast":null,"code":"const NEWITEM = \"NEW-ITEM\";\nlet initialState = {\n  item: [],\n  fake: [{\n    _id: 100,\n    size: null,\n    ves: null,\n    eat: {\n      photoURL: \"null\",\n      name: \"null\",\n      structure: \"null\",\n      cost: \"\"\n    }\n  }]\n};\n\nconst laterSeen = (state = initialState, action) => {\n  switch (action.type) {\n    case NEWITEM:\n      {\n        let n = state.item.length - 1 + 1;\n        let neweat = {\n          _id: n,\n          eat: action.info,\n          ves: action.ves,\n          size: action.size\n        };\n        return { ...state,\n          item: [...state.item, neweat]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const newItem = (info, ves, size) => {\n  return {\n    type: NEWITEM,\n    info,\n    ves,\n    size\n  };\n};\nexport default laterSeen;","map":{"version":3,"sources":["/Users/daloniil/Desktop/React/Pizza/pizzaProject/src/Redux/later-seen-reducer.js"],"names":["NEWITEM","initialState","item","fake","_id","size","ves","eat","photoURL","name","structure","cost","laterSeen","state","action","type","n","length","neweat","info","newItem"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAhB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE,EADS;AAEfC,EAAAA,IAAI,EAAE,CACF;AACIC,IAAAA,GAAG,EAAE,GADT;AAEIC,IAAAA,IAAI,EAAC,IAFT;AAGIC,IAAAA,GAAG,EAAC,IAHR;AAIIC,IAAAA,GAAG,EAAE;AACDC,MAAAA,QAAQ,EAAC,MADR;AAEDC,MAAAA,IAAI,EAAC,MAFJ;AAGDC,MAAAA,SAAS,EAAC,MAHT;AAIDC,MAAAA,IAAI,EAAC;AAJJ;AAJT,GADE;AAFS,CAAnB;;AAqBA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,OAAL;AAAc;AAEV,YAAIgB,CAAC,GAAGH,KAAK,CAACX,IAAN,CAAWe,MAAX,GAAoB,CAApB,GAAwB,CAAhC;AACA,YAAIC,MAAM,GAAG;AACTd,UAAAA,GAAG,EAAEY,CADI;AAETT,UAAAA,GAAG,EAAEO,MAAM,CAACK,IAFH;AAGTb,UAAAA,GAAG,EAAEQ,MAAM,CAACR,GAHH;AAITD,UAAAA,IAAI,EAAES,MAAM,CAACT;AAJJ,SAAb;AAMA,eAAO,EAEH,GAAGQ,KAFA;AAGHX,UAAAA,IAAI,EAAE,CAAC,GAAGW,KAAK,CAACX,IAAV,EAAgBgB,MAAhB;AAHH,SAAP;AAKH;;AAGD;AACI,aAAOL,KAAP;AAnBR;AAuBH,CAxBD;;AA0BA,OAAO,MAAMO,OAAO,GAAG,CAACD,IAAD,EAAOb,GAAP,EAAYD,IAAZ,KAAqB;AACxC,SAAO;AACHU,IAAAA,IAAI,EAAEf,OADH;AAEHmB,IAAAA,IAFG;AAEGb,IAAAA,GAFH;AAEQD,IAAAA;AAFR,GAAP;AAIH,CALM;AAOP,eAAeO,SAAf","sourcesContent":["const NEWITEM = \"NEW-ITEM\"\n\nlet initialState = {\n    item: [],\n    fake: [\n        {\n            _id: 100,\n            size:null,\n            ves:null,\n            eat :{\n                photoURL:\"null\",\n                name:\"null\",\n                structure:\"null\",\n                cost:\"\",\n            },\n\n        }\n\n    ]\n\n\n};\n\nconst laterSeen = (state = initialState, action) => {\n    switch (action.type) {\n        case NEWITEM: {\n\n            let n = state.item.length - 1 + 1;\n            let neweat = {\n                _id: n,\n                eat: action.info,\n                ves: action.ves,\n                size: action.size\n            }\n            return {\n\n                ...state,\n                item: [...state.item, neweat]\n            }\n        }\n\n\n        default:\n            return state;\n\n    }\n\n}\n\nexport const newItem = (info, ves, size) => {\n    return {\n        type: NEWITEM,\n        info, ves, size\n    }\n}\n\nexport default laterSeen;"]},"metadata":{},"sourceType":"module"}