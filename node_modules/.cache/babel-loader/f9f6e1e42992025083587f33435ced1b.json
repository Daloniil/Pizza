{"ast":null,"code":"const NEWITEM = \"NEW-ITEM\";\nlet initialState = {\n  item: []\n};\n\nconst laterSeen = (state = initialState, action) => {\n  switch (action.type) {\n    case NEWITEM:\n      {\n        debugger;\n\n        if (state.item.lenght > 2) {\n          delete state.item[2];\n          let neweat = {\n            eat: action.item\n          };\n          return { ...state,\n            item: [...state.item, neweat]\n          };\n        } else {\n          let neweat = {\n            eat: action.item\n          };\n          return { ...state,\n            item: [...state.item, neweat]\n          };\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const newItem = item => {\n  return {\n    type: NEWITEM,\n    item\n  };\n};\nexport default laterSeen;","map":{"version":3,"sources":["/Users/daloniil/Desktop/React/Pizza/pizzaProject/src/Redux/later-seen-reducer.js"],"names":["NEWITEM","initialState","item","laterSeen","state","action","type","lenght","neweat","eat","newItem"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAhB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE;AADS,CAAnB;;AAMA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,OAAL;AAAc;AAEV;;AACA,YAAII,KAAK,CAACF,IAAN,CAAWK,MAAX,GAAoB,CAAxB,EAA2B;AACvB,iBAAOH,KAAK,CAACF,IAAN,CAAW,CAAX,CAAP;AACA,cAAIM,MAAM,GAAG;AACTC,YAAAA,GAAG,EAAEJ,MAAM,CAACH;AADH,WAAb;AAGA,iBAAO,EAEH,GAAGE,KAFA;AAGHF,YAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBM,MAAhB;AAHH,WAAP;AAKH,SAVD,MAUO;AACH,cAAIA,MAAM,GAAG;AACTC,YAAAA,GAAG,EAAEJ,MAAM,CAACH;AADH,WAAb;AAGA,iBAAO,EAEH,GAAGE,KAFA;AAGHF,YAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBM,MAAhB;AAHH,WAAP;AAKH;AAGJ;;AAED;AACI,aAAOJ,KAAP;AA7BR;AAiCH,CAlCD;;AAoCA,OAAO,MAAMM,OAAO,GAAIR,IAAD,IAAU;AAC7B,SAAO;AACHI,IAAAA,IAAI,EAAEN,OADH;AAEHE,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,eAAeC,SAAf","sourcesContent":["const NEWITEM = \"NEW-ITEM\"\n\nlet initialState = {\n    item: [],\n\n\n};\n\nconst laterSeen = (state = initialState, action) => {\n    switch (action.type) {\n        case NEWITEM: {\n\n            debugger\n            if (state.item.lenght > 2) {\n                delete state.item[2]\n                let neweat = {\n                    eat: action.item,\n                }\n                return {\n\n                    ...state,\n                    item: [...state.item, neweat]\n                }\n            } else {\n                let neweat = {\n                    eat: action.item,\n                }\n                return {\n\n                    ...state,\n                    item: [...state.item, neweat]\n                }\n            }\n\n\n        }\n\n        default:\n            return state;\n\n    }\n\n}\n\nexport const newItem = (item) => {\n    return {\n        type: NEWITEM,\n        item,\n    }\n}\n\nexport default laterSeen;"]},"metadata":{},"sourceType":"module"}