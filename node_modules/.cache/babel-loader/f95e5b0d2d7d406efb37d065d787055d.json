{"ast":null,"code":"const BUYITEM = \"BUY-ITEM\";\nlet initialState = {\n  item: []\n};\n\nconst buyItem = (state = initialState, action) => {\n  switch (action.type) {\n    case BUYITEM:\n      {\n        function userExists(eat) {\n          return arr.some(function (el) {\n            return el.username === username;\n          });\n        }\n\n        let n = state.item.length;\n        let buyeat = {\n          _id: n,\n          eat: action.info,\n          cost: action.cost,\n          size: action.size\n        };\n        return { ...state,\n          item: [...state.item, buyeat]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const buy = (info, cost, size) => {\n  return {\n    type: BUYITEM,\n    info,\n    cost,\n    size\n  };\n};\nexport default buyItem;","map":{"version":3,"sources":["/Users/daloniil/Desktop/React/Pizza/pizzaProject/src/Redux/buy-item-reducer.js"],"names":["BUYITEM","initialState","item","buyItem","state","action","type","userExists","eat","arr","some","el","username","n","length","buyeat","_id","info","cost","size","buy"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAhB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE;AADS,CAAnB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,OAAL;AAAc;AAGV,iBAASO,UAAT,CAAoBC,GAApB,EAAyB;AACrB,iBAAOC,GAAG,CAACC,IAAJ,CAAS,UAAUC,EAAV,EAAc;AAC1B,mBAAOA,EAAE,CAACC,QAAH,KAAgBA,QAAvB;AACH,WAFM,CAAP;AAGH;;AAED,YAAIC,CAAC,GAAGT,KAAK,CAACF,IAAN,CAAWY,MAAnB;AAEA,YAAIC,MAAM,GAAG;AACTC,UAAAA,GAAG,EAAEH,CADI;AAETL,UAAAA,GAAG,EAAEH,MAAM,CAACY,IAFH;AAGTC,UAAAA,IAAI,EAAEb,MAAM,CAACa,IAHJ;AAITC,UAAAA,IAAI,EAAEd,MAAM,CAACc;AAJJ,SAAb;AAQA,eAAO,EAEH,GAAGf,KAFA;AAGHF,UAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBa,MAAhB;AAHH,SAAP;AAKH;;AAGD;AACI,aAAOX,KAAP;AA7BR;AA+BH,CAhCD;;AAmCA,OAAO,MAAMgB,GAAG,GAAG,CAACH,IAAD,EAAOC,IAAP,EAAaC,IAAb,KAAsB;AACrC,SAAO;AACHb,IAAAA,IAAI,EAAEN,OADH;AAEHiB,IAAAA,IAFG;AAEGC,IAAAA,IAFH;AAESC,IAAAA;AAFT,GAAP;AAIH,CALM;AAQP,eAAehB,OAAf","sourcesContent":["const BUYITEM = \"BUY-ITEM\"\n\nlet initialState = {\n    item: [],\n\n\n};\n\nconst buyItem = (state = initialState, action) => {\n    switch (action.type) {\n        case BUYITEM: {\n\n\n            function userExists(eat) {\n                return arr.some(function (el) {\n                    return el.username === username;\n                });\n            }\n\n            let n = state.item.length;\n\n            let buyeat = {\n                _id: n,\n                eat: action.info,\n                cost: action.cost,\n                size: action.size,\n\n            }\n\n            return {\n\n                ...state,\n                item: [...state.item, buyeat]\n            }\n        }\n\n\n        default:\n            return state;\n    }\n}\n\n\nexport const buy = (info, cost, size) => {\n    return {\n        type: BUYITEM,\n        info, cost, size\n    }\n}\n\n\nexport default buyItem;"]},"metadata":{},"sourceType":"module"}