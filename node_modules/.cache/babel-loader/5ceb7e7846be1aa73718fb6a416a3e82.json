{"ast":null,"code":"const NEWITEM = \"NEW-ITEM\";\nlet initialState = {\n  item: []\n};\n\nconst laterSeen = (state = initialState, action) => {\n  switch (action.type) {\n    case NEWITEM:\n      {\n        let n = state.item.length - 1 + 1;\n        let neweat = {\n          _id: n,\n          eat: action.info,\n          ves: action.ves,\n          size: action.size\n        };\n\n        if (!state.item.some(buy => buy.eat === action.info)) {\n          return { ...state,\n            item: [...state.item, neweat]\n          };\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const newItem = (info, ves, size) => {\n  return {\n    type: NEWITEM,\n    info,\n    ves,\n    size\n  };\n};\nexport default laterSeen;","map":{"version":3,"sources":["/Users/daloniil/Desktop/React/Pizza/pizzaProject/src/Redux/later-seen-reducer.js"],"names":["NEWITEM","initialState","item","laterSeen","state","action","type","n","length","neweat","_id","eat","info","ves","size","some","buy","newItem"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAhB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE;AADS,CAAnB;;AAMA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,OAAL;AAAc;AAEV,YAAIO,CAAC,GAAGH,KAAK,CAACF,IAAN,CAAWM,MAAX,GAAoB,CAApB,GAAwB,CAAhC;AACA,YAAIC,MAAM,GAAG;AACTC,UAAAA,GAAG,EAAEH,CADI;AAETI,UAAAA,GAAG,EAAEN,MAAM,CAACO,IAFH;AAGTC,UAAAA,GAAG,EAAER,MAAM,CAACQ,GAHH;AAITC,UAAAA,IAAI,EAAET,MAAM,CAACS;AAJJ,SAAb;;AAOA,YAAI,CAACV,KAAK,CAACF,IAAN,CAAWa,IAAX,CAAiBC,GAAD,IAASA,GAAG,CAACL,GAAJ,KAAYN,MAAM,CAACO,IAA5C,CAAL,EAAwD;AACpD,iBAAO,EAEH,GAAGR,KAFA;AAGHF,YAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBO,MAAhB;AAHH,WAAP;AAKH;AAEJ;;AAGD;AACI,aAAOL,KAAP;AAvBR;AA2BH,CA5BD;;AA8BA,OAAO,MAAMa,OAAO,GAAG,CAACL,IAAD,EAAOC,GAAP,EAAYC,IAAZ,KAAqB;AACxC,SAAO;AACHR,IAAAA,IAAI,EAAEN,OADH;AAEHY,IAAAA,IAFG;AAEGC,IAAAA,GAFH;AAEQC,IAAAA;AAFR,GAAP;AAIH,CALM;AAOP,eAAeX,SAAf","sourcesContent":["const NEWITEM = \"NEW-ITEM\"\n\nlet initialState = {\n    item: [],\n\n\n};\n\nconst laterSeen = (state = initialState, action) => {\n    switch (action.type) {\n        case NEWITEM: {\n\n            let n = state.item.length - 1 + 1;\n            let neweat = {\n                _id: n,\n                eat: action.info,\n                ves: action.ves,\n                size: action.size\n            }\n\n            if (!state.item.some((buy) => buy.eat === action.info)) {\n                return {\n\n                    ...state,\n                    item: [...state.item, neweat]\n                }\n            }\n\n        }\n\n\n        default:\n            return state;\n\n    }\n\n}\n\nexport const newItem = (info, ves, size) => {\n    return {\n        type: NEWITEM,\n        info, ves, size\n    }\n}\n\nexport default laterSeen;"]},"metadata":{},"sourceType":"module"}