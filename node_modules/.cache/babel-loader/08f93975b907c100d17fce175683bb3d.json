{"ast":null,"code":"import React from 'react';\nimport { setpizzAC } from \"../../../../Redux/Menu/pizza-reducer\";\nimport { connect } from \"react-redux\";\nimport Pizza from \"./Pizza\";\nimport App from \"../../../../App\";\nimport { buy } from \"../../../../Redux/buy-item-reducer\";\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    setUser: users => {\n      dispatch(setpizzAC(users));\n    },\n    buy: info => {\n      dispatch(buy(info));\n    }\n  };\n};\n\nlet mapStateToprops = state => {\n  return {\n    pizza: state.pizzaPage.pizza\n  };\n};\n\nconst PizzaContainer = connect(mapStateToprops, mapDispatchToProps)(Pizza);\nexport default PizzaContainer;","map":{"version":3,"sources":["/Users/daloniil/Desktop/React/Pizza/pizzaProject/src/Components/Profile/CenterHeader/Pizza/PizzaContainer.jsx"],"names":["React","setpizzAC","connect","Pizza","App","buy","mapDispatchToProps","dispatch","setUser","users","info","mapStateToprops","state","pizza","pizzaPage","PizzaContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,sCAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAAQC,GAAR,QAAkB,oCAAlB;;AAGA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AAEnC,SAAO;AACHC,IAAAA,OAAO,EAAGC,KAAD,IAAW;AAChBF,MAAAA,QAAQ,CAACN,SAAS,CAACQ,KAAD,CAAV,CAAR;AACH,KAHE;AAIHJ,IAAAA,GAAG,EAAGK,IAAD,IAAU;AACXH,MAAAA,QAAQ,CAACF,GAAG,CAACK,IAAD,CAAJ,CAAR;AACH;AANE,GAAP;AASH,CAXD;;AAaA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAE7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBD;AADpB,GAAP;AAKH,CAPD;;AASA,MAAME,cAAc,GAAGb,OAAO,CAACS,eAAD,EAAkBL,kBAAlB,CAAP,CAA6CH,KAA7C,CAAvB;AACA,eAAeY,cAAf","sourcesContent":["import React from 'react';\nimport {setpizzAC} from \"../../../../Redux/Menu/pizza-reducer\";\nimport {connect} from \"react-redux\";\nimport Pizza from \"./Pizza\";\nimport App from \"../../../../App\";\nimport {buy} from \"../../../../Redux/buy-item-reducer\";\n\n\nlet mapDispatchToProps = (dispatch) => {\n\n    return {\n        setUser: (users) => {\n            dispatch(setpizzAC(users));\n        },\n        buy: (info) => {\n            dispatch(buy(info));\n        },\n    }\n\n}\n\nlet mapStateToprops = (state) => {\n\n    return {\n        pizza: state.pizzaPage.pizza\n    }\n\n\n}\n\nconst PizzaContainer = connect(mapStateToprops, mapDispatchToProps)(Pizza);\nexport default PizzaContainer\n"]},"metadata":{},"sourceType":"module"}