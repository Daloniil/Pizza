{"ast":null,"code":"const BUYITEM = \"BUY-ITEM\";\nconst LENGHT = \"LENGHT\";\nconst AMOUNTSMINUS = \"AMOUNTSMINUS\";\nconst AMOUNTSPLUS = \"AMOUNTSPLUS\";\nlet initialState = {\n  item: [],\n  lenght: null,\n  amoun: null\n};\n\nconst buyItem = (state = initialState, action) => {\n  switch (action.type) {\n    case BUYITEM:\n      {\n        let n = state.item.length;\n        let buyeat = {\n          _id: n,\n          id: action.info.id,\n          name: action.info.name,\n          eat: action.info,\n          cost: action.cost,\n          size: action.size,\n          finalcost: action.cost,\n          amount: action.info.amount\n        };\n\n        if (action.size > 0) {\n          if (!state.item.some(buy => buy.id === action.info.id)) {\n            return { ...state,\n              item: [...state.item, buyeat],\n              lenght: state.item.length,\n              amoun: state.amoun + action.info.amount\n            };\n          } else {\n            if (!state.item.some(buy => buy.size === action.size)) {\n              return { ...state,\n                item: [...state.item, buyeat],\n                lenght: state.item.length,\n                amoun: state.amoun + action.info.amount\n              };\n            } else {\n              let searchId = action.info.id;\n              let indexId = state.item.findIndex(el => el.id === searchId);\n              return { ...state,\n                ...(state.item[indexId].eat.amount += 1),\n                amoun: state.amoun + 1,\n                ...(state.item[indexId].cost = state.item[indexId].finalcost * state.item[indexId].eat.amount)\n              };\n            }\n          }\n        } else if (!state.item.some(buy => buy.id === action.info.id)) {\n          return { ...state,\n            item: [...state.item, buyeat],\n            lenght: state.item.length,\n            amoun: action.info.amount\n          };\n        } else {\n          let Id = action.info.id;\n          let index = state.item.findIndex(el => el.id === Id);\n          return { ...state,\n            ...(state.item[index].eat.amount += 1),\n            amoun: state.amoun + 1,\n            ...(state.item[index].cost = state.item[index].finalcost * state.item[index].eat.amount)\n          };\n        }\n      }\n\n    case LENGHT:\n      {\n        return { ...state,\n          lenght: action.lenght\n        };\n      }\n\n    case AMOUNTSMINUS:\n      {\n        return { ...state,\n          amoun: amoun - newam\n        };\n      }\n\n    case AMOUNTSPLUS:\n      {\n        return { ...state,\n          amoun: state.amoun + 1\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const buy = (info, cost, size) => {\n  return {\n    type: BUYITEM,\n    info,\n    cost,\n    size\n  };\n};\nexport const deleteLenght = lenght => {\n  return {\n    type: LENGHT,\n    lenght\n  };\n};\nexport const amountLeghtminus = newam => {\n  return {\n    type: AMOUNTSMINUS,\n    newam\n  };\n};\nexport const amountLeghtplus = () => {\n  return {\n    type: AMOUNTSPLUS\n  };\n};\nexport default buyItem;","map":{"version":3,"sources":["/Users/daloniil/Desktop/React/Pizza/pizzaProject/src/Redux/buy-item-reducer.js"],"names":["BUYITEM","LENGHT","AMOUNTSMINUS","AMOUNTSPLUS","initialState","item","lenght","amoun","buyItem","state","action","type","n","length","buyeat","_id","id","info","name","eat","cost","size","finalcost","amount","some","buy","searchId","indexId","findIndex","el","Id","index","newam","deleteLenght","amountLeghtminus","amountLeghtplus"],"mappings":"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","sourcesContent":["const BUYITEM = \"BUY-ITEM\"\nconst LENGHT = \"LENGHT\"\nconst AMOUNTSMINUS = \"AMOUNTSMINUS\"\nconst AMOUNTSPLUS = \"AMOUNTSPLUS\"\n\n\nlet initialState = {\n    item: [],\n    lenght: null,\n    amoun: null,\n\n};\n\nconst buyItem = (state = initialState, action) => {\n    switch (action.type) {\n        case BUYITEM: {\n\n\n            let n = state.item.length;\n            let buyeat = {\n                _id: n,\n                id: action.info.id,\n                name: action.info.name,\n                eat: action.info,\n                cost: action.cost,\n                size: action.size,\n                finalcost: action.cost,\n                amount: action.info.amount\n            }\n\n\n            if (action.size > 0) {\n                if (!state.item.some((buy) => buy.id === action.info.id)) {\n                    return {\n                        ...state,\n                        item: [...state.item, buyeat],\n                        lenght: state.item.length,\n                        amoun: state.amoun + action.info.amount\n\n                    }\n                } else {\n                    if (!state.item.some((buy) => buy.size === action.size)) {\n                        return {\n                            ...state,\n                            item: [...state.item, buyeat],\n                            lenght: state.item.length,\n                            amoun: state.amoun + action.info.amount\n                        }\n                    } else {\n                        let searchId = action.info.id\n                        let indexId = state.item.findIndex(el => el.id === searchId)\n\n                        return {\n                            ...state,\n                            ...state.item[indexId].eat.amount += 1,\n                            amoun: state.amoun + 1,\n                            ...state.item[indexId].cost = state.item[indexId].finalcost * state.item[indexId].eat.amount,\n                        }\n                    }\n\n                }\n\n            } else if (!state.item.some((buy) => buy.id === action.info.id)) {\n                return {\n                    ...state,\n                    item: [...state.item, buyeat],\n                    lenght: state.item.length,\n                    amoun: action.info.amount\n\n                }\n            } else {\n                let Id = action.info.id\n                let index = state.item.findIndex(el => el.id === Id)\n                return {\n                    ...state,\n                    ...state.item[index].eat.amount += 1,\n                    amoun: state.amoun + 1,\n                    ...state.item[index].cost = state.item[index].finalcost * state.item[index].eat.amount,\n                }\n            }\n        }\n\n\n        case LENGHT: {\n            return {\n                ...state,\n                lenght: action.lenght\n            }\n        }\n\n        case AMOUNTSMINUS: {\n            return {\n                ...state,\n                amoun: amoun - newam\n            }\n        }\n\n        case AMOUNTSPLUS: {\n            return {\n                ...state,\n                amoun: state.amoun + 1\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const buy = (info, cost, size) => {\n    return {\n        type: BUYITEM,\n        info, cost, size\n    }\n}\n\nexport const deleteLenght = (lenght) => {\n    return {\n        type: LENGHT,\n        lenght\n    }\n}\n\nexport const amountLeghtminus = (newam) => {\n    return {\n        type: AMOUNTSMINUS,\n        newam\n    }\n}\n\nexport const amountLeghtplus = () => {\n    return {\n        type: AMOUNTSPLUS,\n    }\n}\n\n\nexport default buyItem;"]},"metadata":{},"sourceType":"module"}