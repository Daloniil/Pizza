{"ast":null,"code":"const BUYITEM = \"BUY-ITEM\";\nlet initialState = {\n  item: []\n};\n\nconst buyItem = (state = initialState, action) => {\n  switch (action.type) {\n    case BUYITEM:\n      {\n        let n = state.item.length;\n        let buyeat;\n\n        function idExists(id) {\n          return action.info.some(function (el) {\n            return el.id === id;\n          });\n        }\n\n        if (idExists(id)) {\n          return false;\n        } else {\n          buyeat = {\n            _id: n,\n            eat: action.info,\n            cost: action.cost,\n            size: action.size\n          };\n          return true;\n        }\n\n        return { ...state,\n          item: [...state.item, buyeat]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const buy = (info, cost, size) => {\n  return {\n    type: BUYITEM,\n    info,\n    cost,\n    size\n  };\n};\nexport default buyItem;","map":{"version":3,"sources":["/Users/daloniil/Desktop/React/Pizza/pizzaProject/src/Redux/buy-item-reducer.js"],"names":["BUYITEM","initialState","item","buyItem","state","action","type","n","length","buyeat","idExists","id","info","some","el","_id","eat","cost","size","buy"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAhB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE;AADS,CAAnB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,OAAL;AAAc;AAGV,YAAIO,CAAC,GAAGH,KAAK,CAACF,IAAN,CAAWM,MAAnB;AACA,YAAIC,MAAJ;;AAEA,iBAASC,QAAT,CAAkBC,EAAlB,EAAsB;AAClB,iBAAON,MAAM,CAACO,IAAP,CAAYC,IAAZ,CAAiB,UAAUC,EAAV,EAAc;AAClC,mBAAOA,EAAE,CAACH,EAAH,KAAUA,EAAjB;AACH,WAFM,CAAP;AAGH;;AAED,YAAID,QAAQ,CAACC,EAAD,CAAZ,EAAkB;AACd,iBAAO,KAAP;AACH,SAFD,MAEO;AACHF,UAAAA,MAAM,GAAG;AACLM,YAAAA,GAAG,EAAER,CADA;AAELS,YAAAA,GAAG,EAAEX,MAAM,CAACO,IAFP;AAGLK,YAAAA,IAAI,EAAEZ,MAAM,CAACY,IAHR;AAILC,YAAAA,IAAI,EAAEb,MAAM,CAACa;AAJR,WAAT;AAMA,iBAAO,IAAP;AACH;;AAED,eAAO,EAEH,GAAGd,KAFA;AAGHF,UAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBO,MAAhB;AAHH,SAAP;AAKH;;AAGD;AACI,aAAOL,KAAP;AAlCR;AAoCH,CArCD;;AAwCA,OAAO,MAAMe,GAAG,GAAG,CAACP,IAAD,EAAOK,IAAP,EAAaC,IAAb,KAAsB;AACrC,SAAO;AACHZ,IAAAA,IAAI,EAAEN,OADH;AAEHY,IAAAA,IAFG;AAEGK,IAAAA,IAFH;AAESC,IAAAA;AAFT,GAAP;AAIH,CALM;AAQP,eAAef,OAAf","sourcesContent":["const BUYITEM = \"BUY-ITEM\"\n\nlet initialState = {\n    item: [],\n\n\n};\n\nconst buyItem = (state = initialState, action) => {\n    switch (action.type) {\n        case BUYITEM: {\n\n\n            let n = state.item.length;\n            let buyeat\n\n            function idExists(id) {\n                return action.info.some(function (el) {\n                    return el.id === id;\n                });\n            }\n\n            if (idExists(id)) {\n                return false;\n            } else {\n                buyeat = {\n                    _id: n,\n                    eat: action.info,\n                    cost: action.cost,\n                    size: action.size,\n                }\n                return true;\n            }\n\n            return {\n\n                ...state,\n                item: [...state.item, buyeat]\n            }\n        }\n\n\n        default:\n            return state;\n    }\n}\n\n\nexport const buy = (info, cost, size) => {\n    return {\n        type: BUYITEM,\n        info, cost, size\n    }\n}\n\n\nexport default buyItem;"]},"metadata":{},"sourceType":"module"}