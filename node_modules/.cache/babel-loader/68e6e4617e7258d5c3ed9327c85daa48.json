{"ast":null,"code":"const BUYITEM = \"BUY-ITEM\";\nlet initialState = {\n  item: []\n};\n\nconst buyItem = (state = initialState, action) => {\n  switch (action.type) {\n    case BUYITEM:\n      {\n        let n = state.item.length;\n        let buyeat;\n        let found = action.info.some(ele => ele.id === action.info.id);\n        buyeat = {\n          _id: n,\n          eat: action.info,\n          cost: action.cost,\n          size: action.size\n        };\n        return { ...state,\n          item: [...state.item, buyeat]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const buy = (info, cost, size) => {\n  return {\n    type: BUYITEM,\n    info,\n    cost,\n    size\n  };\n};\nexport default buyItem;","map":{"version":3,"sources":["/Users/daloniil/Desktop/React/Pizza/pizzaProject/src/Redux/buy-item-reducer.js"],"names":["BUYITEM","initialState","item","buyItem","state","action","type","n","length","buyeat","found","info","some","ele","id","_id","eat","cost","size","buy"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAhB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE;AADS,CAAnB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,OAAL;AAAc;AAGV,YAAIO,CAAC,GAAGH,KAAK,CAACF,IAAN,CAAWM,MAAnB;AACA,YAAIC,MAAJ;AAEA,YAAIC,KAAK,GAAGL,MAAM,CAACM,IAAP,CAAYC,IAAZ,CAAiBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWT,MAAM,CAACM,IAAP,CAAYG,EAA/C,CAAZ;AACIL,QAAAA,MAAM,GAAG;AACLM,UAAAA,GAAG,EAAER,CADA;AAELS,UAAAA,GAAG,EAAEX,MAAM,CAACM,IAFP;AAGLM,UAAAA,IAAI,EAAEZ,MAAM,CAACY,IAHR;AAILC,UAAAA,IAAI,EAAEb,MAAM,CAACa;AAJR,SAAT;AASJ,eAAO,EAEH,GAAGd,KAFA;AAGHF,UAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBO,MAAhB;AAHH,SAAP;AAKH;;AAGD;AACI,aAAOL,KAAP;AA1BR;AA4BH,CA7BD;;AAgCA,OAAO,MAAMe,GAAG,GAAG,CAACR,IAAD,EAAOM,IAAP,EAAaC,IAAb,KAAsB;AACrC,SAAO;AACHZ,IAAAA,IAAI,EAAEN,OADH;AAEHW,IAAAA,IAFG;AAEGM,IAAAA,IAFH;AAESC,IAAAA;AAFT,GAAP;AAIH,CALM;AAQP,eAAef,OAAf","sourcesContent":["const BUYITEM = \"BUY-ITEM\"\n\nlet initialState = {\n    item: [],\n\n\n};\n\nconst buyItem = (state = initialState, action) => {\n    switch (action.type) {\n        case BUYITEM: {\n\n\n            let n = state.item.length;\n            let buyeat\n\n            let found = action.info.some(ele => ele.id === action.info.id);\n                buyeat = {\n                    _id: n,\n                    eat: action.info,\n                    cost: action.cost,\n                    size: action.size,\n                }\n\n\n\n            return {\n\n                ...state,\n                item: [...state.item, buyeat]\n            }\n        }\n\n\n        default:\n            return state;\n    }\n}\n\n\nexport const buy = (info, cost, size) => {\n    return {\n        type: BUYITEM,\n        info, cost, size\n    }\n}\n\n\nexport default buyItem;"]},"metadata":{},"sourceType":"module"}