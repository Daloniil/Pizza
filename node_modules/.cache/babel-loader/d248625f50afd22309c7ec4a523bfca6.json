{"ast":null,"code":"const BUYITEM = \"BUY-ITEM\";\nlet initialState = {\n  item: []\n};\n\nconst buyItem = (state = initialState, action) => {\n  switch (action.type) {\n    case BUYITEM:\n      {\n        let n = state.item.length;\n\n        function idExists(id) {\n          return action.info.some(function (el) {\n            return el.id === id;\n          });\n        }\n\n        function addItem(id) {\n          if (idExists(id)) {\n            return false;\n          }\n\n          let buyeat = {\n            _id: n,\n            eat: action.info,\n            cost: action.cost,\n            size: action.size\n          };\n          return true;\n        }\n\n        return { ...state,\n          item: [...state.item, buyeat]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const buy = (info, cost, size) => {\n  return {\n    type: BUYITEM,\n    info,\n    cost,\n    size\n  };\n};\nexport default buyItem;","map":{"version":3,"sources":["/Users/daloniil/Desktop/React/Pizza/pizzaProject/src/Redux/buy-item-reducer.js"],"names":["BUYITEM","initialState","item","buyItem","state","action","type","n","length","idExists","id","info","some","el","addItem","buyeat","_id","eat","cost","size","buy"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAhB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE;AADS,CAAnB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,OAAL;AAAc;AAGV,YAAIO,CAAC,GAAGH,KAAK,CAACF,IAAN,CAAWM,MAAnB;;AAGA,iBAASC,QAAT,CAAkBC,EAAlB,EAAsB;AAClB,iBAAOL,MAAM,CAACM,IAAP,CAAYC,IAAZ,CAAiB,UAAUC,EAAV,EAAc;AAClC,mBAAOA,EAAE,CAACH,EAAH,KAAUA,EAAjB;AACH,WAFM,CAAP;AAGH;;AAED,iBAASI,OAAT,CAAiBJ,EAAjB,EAAqB;AACjB,cAAID,QAAQ,CAACC,EAAD,CAAZ,EAAkB;AACd,mBAAO,KAAP;AACH;;AACD,cAAIK,MAAM,GAAG;AACTC,YAAAA,GAAG,EAAET,CADI;AAETU,YAAAA,GAAG,EAAEZ,MAAM,CAACM,IAFH;AAGTO,YAAAA,IAAI,EAAEb,MAAM,CAACa,IAHJ;AAITC,YAAAA,IAAI,EAAEd,MAAM,CAACc;AAJJ,WAAb;AAOA,iBAAO,IAAP;AACH;;AAED,eAAO,EAEH,GAAGf,KAFA;AAGHF,UAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBa,MAAhB;AAHH,SAAP;AAKH;;AAGD;AACI,aAAOX,KAAP;AApCR;AAsCH,CAvCD;;AA0CA,OAAO,MAAMgB,GAAG,GAAG,CAACT,IAAD,EAAOO,IAAP,EAAaC,IAAb,KAAsB;AACrC,SAAO;AACHb,IAAAA,IAAI,EAAEN,OADH;AAEHW,IAAAA,IAFG;AAEGO,IAAAA,IAFH;AAESC,IAAAA;AAFT,GAAP;AAIH,CALM;AAQP,eAAehB,OAAf","sourcesContent":["const BUYITEM = \"BUY-ITEM\"\n\nlet initialState = {\n    item: [],\n\n\n};\n\nconst buyItem = (state = initialState, action) => {\n    switch (action.type) {\n        case BUYITEM: {\n\n\n            let n = state.item.length;\n\n\n            function idExists(id) {\n                return action.info.some(function (el) {\n                    return el.id === id;\n                });\n            }\n\n            function addItem(id) {\n                if (idExists(id)) {\n                    return false;\n                }\n                let buyeat = {\n                    _id: n,\n                    eat: action.info,\n                    cost: action.cost,\n                    size: action.size,\n\n                }\n                return true;\n            }\n\n            return {\n\n                ...state,\n                item: [...state.item, buyeat]\n            }\n        }\n\n\n        default:\n            return state;\n    }\n}\n\n\nexport const buy = (info, cost, size) => {\n    return {\n        type: BUYITEM,\n        info, cost, size\n    }\n}\n\n\nexport default buyItem;"]},"metadata":{},"sourceType":"module"}