{"ast":null,"code":"const BUYITEM = \"BUY-ITEM\";\nconst LENGHT = \"LENGHT\";\nlet initialState = {\n  item: [],\n  lenght: null\n};\ninitialState.amount = initialState.item.reduce(function (a, b) {\n  return Math.round(a + b.amount);\n}, 0);\n\nconst buyItem = (state = initialState, action) => {\n  switch (action.type) {\n    case BUYITEM:\n      {\n        let n = state.item.length;\n        let buyeat = {\n          _id: n,\n          id: action.info.id,\n          name: action.info.name,\n          eat: action.info,\n          cost: action.cost,\n          size: action.size,\n          finalcost: action.cost,\n          amount: action.info.amount\n        };\n\n        if (action.size > 0) {\n          if (!state.item.some(buy => buy.id === action.info.id)) {\n            return { ...state,\n              item: [...state.item, buyeat],\n              lenght: state.item.length\n            };\n          } else {\n            if (!state.item.some(buy => buy.size === action.size)) {\n              return { ...state,\n                item: [...state.item, buyeat],\n                lenght: state.item.length\n              };\n            } else {\n              let searchId = action.info.id;\n              let indexId = state.item.findIndex(el => el.id === searchId);\n              return { ...state,\n                ...(state.item[indexId].eat.amount += 1),\n                ...(state.item[indexId].amount += 1),\n                ...(state.item[indexId].cost = state.item[indexId].finalcost * state.item[indexId].eat.amount)\n              };\n            }\n          }\n        } else if (!state.item.some(buy => buy.id === action.info.id)) {\n          return { ...state,\n            item: [...state.item, buyeat],\n            lenght: state.item.length\n          };\n        } else {\n          let Id = action.info.id;\n          let index = state.item.findIndex(el => el.id === Id);\n          return { ...state,\n            ...(state.item[index].eat.amount += 1),\n            ...(state.item[index].amount += 1),\n            ...(state.item[index].cost = state.item[index].finalcost * state.item[index].eat.amount)\n          };\n        }\n      }\n\n    case LENGHT:\n      {\n        return { ...state,\n          lenght: action.lenght\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const buy = (info, cost, size) => {\n  return {\n    type: BUYITEM,\n    info,\n    cost,\n    size\n  };\n};\nexport const deleteLenght = lenght => {\n  return {\n    type: LENGHT,\n    lenght\n  };\n};\nexport default buyItem;","map":{"version":3,"sources":["/Users/daloniil/Desktop/React/Pizza/pizzaProject/src/Redux/buy-item-reducer.js"],"names":["BUYITEM","LENGHT","initialState","item","lenght","amount","reduce","a","b","Math","round","buyItem","state","action","type","n","length","buyeat","_id","id","info","name","eat","cost","size","finalcost","some","buy","searchId","indexId","findIndex","el","Id","index","deleteLenght"],"mappings":"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","sourcesContent":["const BUYITEM = \"BUY-ITEM\"\nconst LENGHT = \"LENGHT\"\n\n\nlet initialState = {\n    item: [],\n    lenght: null,\n\n\n};\ninitialState.amount = initialState.item.reduce(function (a, b) {\n    return Math.round(a + b.amount);\n}, 0);\n\nconst buyItem = (state = initialState, action) => {\n    switch (action.type) {\n        case BUYITEM: {\n\n\n            let n = state.item.length;\n            let buyeat = {\n                _id: n,\n                id: action.info.id,\n                name: action.info.name,\n                eat: action.info,\n                cost: action.cost,\n                size: action.size,\n                finalcost: action.cost,\n                amount: action.info.amount\n            }\n\n\n            if (action.size > 0) {\n                if (!state.item.some((buy) => buy.id === action.info.id)) {\n                    return {\n                        ...state,\n                        item: [...state.item, buyeat],\n                        lenght: state.item.length\n\n                    }\n                } else {\n                    if (!state.item.some((buy) => buy.size === action.size)) {\n                        return {\n                            ...state,\n                            item: [...state.item, buyeat],\n                            lenght: state.item.length\n\n                        }\n                    } else {\n                        let searchId = action.info.id\n                        let indexId = state.item.findIndex(el => el.id === searchId)\n\n                        return {\n                            ...state,\n                            ...state.item[indexId].eat.amount += 1,\n                            ...state.item[indexId].amount += 1,\n                            ...state.item[indexId].cost = state.item[indexId].finalcost * state.item[indexId].eat.amount,\n                        }\n                    }\n\n                }\n\n            } else if (!state.item.some((buy) => buy.id === action.info.id)) {\n                return {\n                    ...state,\n                    item: [...state.item, buyeat],\n                    lenght: state.item.length\n\n                }\n            } else {\n                let Id = action.info.id\n                let index = state.item.findIndex(el => el.id === Id)\n                return {\n                    ...state,\n                    ...state.item[index].eat.amount += 1,\n                    ...state.item[index].amount += 1,\n                    ...state.item[index].cost = state.item[index].finalcost * state.item[index].eat.amount,\n                }\n            }\n        }\n\n\n        case\n        LENGHT: {\n            return {\n                ...state,\n                lenght: action.lenght\n            }\n        }\n\n\n        default:\n            return state;\n    }\n}\n\n\nexport const buy = (info, cost, size) => {\n    return {\n        type: BUYITEM,\n        info, cost, size\n    }\n}\n\nexport const deleteLenght = (lenght) => {\n    return {\n        type: LENGHT,\n        lenght\n    }\n}\n\nexport default buyItem;"]},"metadata":{},"sourceType":"module"}