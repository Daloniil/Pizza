{"ast":null,"code":"const BUYITEM = \"BUY-ITEM\";\nconst UPDATEAMOUNT = \"UPDATE-AMOUNT\";\nlet initialState = {\n  item: []\n};\n\nconst buyItem = (state = initialState, action) => {\n  switch (action.type) {\n    case BUYITEM:\n      {\n        let n = state.item.length;\n        let buyeat = {\n          _id: n,\n          eat: action.info,\n          cost: action.cost,\n          size: action.size\n        };\n        var valueArr = values.map(function (item) {\n          return item.name;\n        });\n        var isDuplicate = valueArr.some(function (item, idx) {\n          return valueArr.indexOf(item) != idx;\n        });\n        return { ...state,\n          item: [...state.item, buyeat]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const buy = (info, cost, size) => {\n  return {\n    type: BUYITEM,\n    info,\n    cost,\n    size\n  };\n};\nexport default buyItem;","map":{"version":3,"sources":["/Users/daloniil/Desktop/React/Pizza/pizzaProject/src/Redux/buy-item-reducer.js"],"names":["BUYITEM","UPDATEAMOUNT","initialState","item","buyItem","state","action","type","n","length","buyeat","_id","eat","info","cost","size","valueArr","values","map","name","isDuplicate","some","idx","indexOf","buy"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAhB;AACA,MAAMC,YAAY,GAAG,eAArB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE;AADS,CAAnB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,OAAL;AAAc;AAEV,YAAIQ,CAAC,GAAGH,KAAK,CAACF,IAAN,CAAWM,MAAnB;AACA,YAAIC,MAAM,GAAG;AACTC,UAAAA,GAAG,EAAEH,CADI;AAETI,UAAAA,GAAG,EAAEN,MAAM,CAACO,IAFH;AAGTC,UAAAA,IAAI,EAAER,MAAM,CAACQ,IAHJ;AAITC,UAAAA,IAAI,EAAET,MAAM,CAACS;AAJJ,SAAb;AAOA,YAAIC,QAAQ,GAAGC,MAAM,CAACC,GAAP,CAAW,UAASf,IAAT,EAAc;AAAE,iBAAOA,IAAI,CAACgB,IAAZ;AAAkB,SAA7C,CAAf;AACA,YAAIC,WAAW,GAAGJ,QAAQ,CAACK,IAAT,CAAc,UAASlB,IAAT,EAAemB,GAAf,EAAmB;AAC/C,iBAAON,QAAQ,CAACO,OAAT,CAAiBpB,IAAjB,KAA0BmB,GAAjC;AACH,SAFiB,CAAlB;AAGA,eAAO,EAEH,GAAGjB,KAFA;AAGHF,UAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBO,MAAhB;AAHH,SAAP;AAKH;;AAKD;AACI,aAAOL,KAAP;AA1BR;AA4BH,CA7BD;;AAgCA,OAAO,MAAMmB,GAAG,GAAG,CAACX,IAAD,EAAOC,IAAP,EAAaC,IAAb,KAAsB;AACrC,SAAO;AACHR,IAAAA,IAAI,EAAEP,OADH;AAEHa,IAAAA,IAFG;AAEGC,IAAAA,IAFH;AAESC,IAAAA;AAFT,GAAP;AAIH,CALM;AAYP,eAAeX,OAAf","sourcesContent":["const BUYITEM = \"BUY-ITEM\"\nconst UPDATEAMOUNT = \"UPDATE-AMOUNT\"\n\nlet initialState = {\n    item: [],\n\n\n};\n\nconst buyItem = (state = initialState, action) => {\n    switch (action.type) {\n        case BUYITEM: {\n\n            let n = state.item.length;\n            let buyeat = {\n                _id: n,\n                eat: action.info,\n                cost: action.cost,\n                size: action.size,\n\n            }\n            var valueArr = values.map(function(item){ return item.name });\n            var isDuplicate = valueArr.some(function(item, idx){\n                return valueArr.indexOf(item) != idx\n            });\n            return {\n\n                ...state,\n                item: [...state.item, buyeat]\n            }\n        }\n\n\n\n\n        default:\n            return state;\n    }\n}\n\n\nexport const buy = (info, cost, size) => {\n    return {\n        type: BUYITEM,\n        info, cost, size\n    }\n}\n\n\n\n\n\n\nexport default buyItem;"]},"metadata":{},"sourceType":"module"}