{"ast":null,"code":"const BUYITEM = \"BUY-ITEM\";\nlet initialState = {\n  item: []\n};\n\nconst buyItem = (state = initialState, action) => {\n  switch (action.type) {\n    case BUYITEM:\n      {\n        function add(info, name) {\n          const {\n            length\n          } = info;\n          const id = length + 1;\n          const found = info.some(el => el.username === name);\n          if (!found) info.push({\n            id,\n            username: name\n          });\n          return info;\n        }\n\n        let n = state.item.length;\n        let buyeat = {\n          _id: n,\n          eat: action.info,\n          cost: action.cost,\n          size: action.size\n        };\n        return { ...state,\n          item: [...state.item, buyeat]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const buy = (info, cost, size) => {\n  return {\n    type: BUYITEM,\n    info,\n    cost,\n    size\n  };\n};\nexport default buyItem;","map":{"version":3,"sources":["/Users/daloniil/Desktop/React/Pizza/pizzaProject/src/Redux/buy-item-reducer.js"],"names":["BUYITEM","initialState","item","buyItem","state","action","type","add","info","name","length","id","found","some","el","username","push","n","buyeat","_id","eat","cost","size","buy"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAhB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE;AADS,CAAnB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,OAAL;AAAc;AAGV,iBAASO,GAAT,CAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AACrB,gBAAM;AAACC,YAAAA;AAAD,cAAWF,IAAjB;AACA,gBAAMG,EAAE,GAAGD,MAAM,GAAG,CAApB;AACA,gBAAME,KAAK,GAAGJ,IAAI,CAACK,IAAL,CAAUC,EAAE,IAAIA,EAAE,CAACC,QAAH,KAAgBN,IAAhC,CAAd;AACA,cAAI,CAACG,KAAL,EAAYJ,IAAI,CAACQ,IAAL,CAAU;AAACL,YAAAA,EAAD;AAAKI,YAAAA,QAAQ,EAAEN;AAAf,WAAV;AACZ,iBAAOD,IAAP;AACH;;AAED,YAAIS,CAAC,GAAGb,KAAK,CAACF,IAAN,CAAWQ,MAAnB;AAEA,YAAIQ,MAAM,GAAG;AACTC,UAAAA,GAAG,EAAEF,CADI;AAETG,UAAAA,GAAG,EAAEf,MAAM,CAACG,IAFH;AAGTa,UAAAA,IAAI,EAAEhB,MAAM,CAACgB,IAHJ;AAITC,UAAAA,IAAI,EAAEjB,MAAM,CAACiB;AAJJ,SAAb;AAQA,eAAO,EAEH,GAAGlB,KAFA;AAGHF,UAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBgB,MAAhB;AAHH,SAAP;AAKH;;AAGD;AACI,aAAOd,KAAP;AA/BR;AAiCH,CAlCD;;AAqCA,OAAO,MAAMmB,GAAG,GAAG,CAACf,IAAD,EAAOa,IAAP,EAAaC,IAAb,KAAsB;AACrC,SAAO;AACHhB,IAAAA,IAAI,EAAEN,OADH;AAEHQ,IAAAA,IAFG;AAEGa,IAAAA,IAFH;AAESC,IAAAA;AAFT,GAAP;AAIH,CALM;AAQP,eAAenB,OAAf","sourcesContent":["const BUYITEM = \"BUY-ITEM\"\n\nlet initialState = {\n    item: [],\n\n\n};\n\nconst buyItem = (state = initialState, action) => {\n    switch (action.type) {\n        case BUYITEM: {\n\n\n            function add(info, name) {\n                const {length} = info;\n                const id = length + 1;\n                const found = info.some(el => el.username === name);\n                if (!found) info.push({id, username: name});\n                return info;\n            }\n\n            let n = state.item.length;\n\n            let buyeat = {\n                _id: n,\n                eat: action.info,\n                cost: action.cost,\n                size: action.size,\n\n            }\n\n            return {\n\n                ...state,\n                item: [...state.item, buyeat]\n            }\n        }\n\n\n        default:\n            return state;\n    }\n}\n\n\nexport const buy = (info, cost, size) => {\n    return {\n        type: BUYITEM,\n        info, cost, size\n    }\n}\n\n\nexport default buyItem;"]},"metadata":{},"sourceType":"module"}