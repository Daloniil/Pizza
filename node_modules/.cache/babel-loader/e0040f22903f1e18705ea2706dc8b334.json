{"ast":null,"code":"const BUYITEM = \"BUY-ITEM\";\nlet initialState = {\n  item: [],\n  lenght: null\n};\n\nconst buyItem = (state = initialState, action) => {\n  switch (action.type) {\n    case BUYITEM:\n      {\n        let n = state.item.length;\n\n        function checkAndAdd(name) {\n          var id = action.item.pizza.length + 1;\n          var found = action.item.some(function (el) {\n            return el.id === id;\n          });\n\n          if (!found) {\n            let buyeat = {\n              _id: n,\n              eat: action.info,\n              cost: action.cost,\n              size: action.size\n            };\n            return { ...state,\n              item: [...state.item, buyeat],\n              lenght: state.item.length\n            };\n          }\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const buy = (info, cost, size) => {\n  return {\n    type: BUYITEM,\n    info,\n    cost,\n    size\n  };\n};\nexport default buyItem;","map":{"version":3,"sources":["/Users/daloniil/Desktop/React/Pizza/pizzaProject/src/Redux/buy-item-reducer.js"],"names":["BUYITEM","initialState","item","lenght","buyItem","state","action","type","n","length","checkAndAdd","name","id","pizza","found","some","el","buyeat","_id","eat","info","cost","size","buy"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAhB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE,EADS;AAEfC,EAAAA,MAAM,EAAE;AAFO,CAAnB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,OAAL;AAAc;AAGV,YAAIQ,CAAC,GAAGH,KAAK,CAACH,IAAN,CAAWO,MAAnB;;AAGA,iBAASC,WAAT,CAAqBC,IAArB,EAA2B;AACvB,cAAIC,EAAE,GAAGN,MAAM,CAACJ,IAAP,CAAYW,KAAZ,CAAkBJ,MAAlB,GAA2B,CAApC;AACA,cAAIK,KAAK,GAAGR,MAAM,CAACJ,IAAP,CAAYa,IAAZ,CAAiB,UAAUC,EAAV,EAAc;AACvC,mBAAOA,EAAE,CAACJ,EAAH,KAAUA,EAAjB;AACH,WAFW,CAAZ;;AAGA,cAAI,CAACE,KAAL,EAAY;AACR,gBAAIG,MAAM,GAAG;AACTC,cAAAA,GAAG,EAAEV,CADI;AAETW,cAAAA,GAAG,EAAEb,MAAM,CAACc,IAFH;AAGTC,cAAAA,IAAI,EAAEf,MAAM,CAACe,IAHJ;AAITC,cAAAA,IAAI,EAAEhB,MAAM,CAACgB;AAJJ,aAAb;AAMA,mBAAO,EAGH,GAAGjB,KAHA;AAIHH,cAAAA,IAAI,EAAE,CAAC,GAAGG,KAAK,CAACH,IAAV,EAAgBe,MAAhB,CAJH;AAKHd,cAAAA,MAAM,EAAEE,KAAK,CAACH,IAAN,CAAWO;AALhB,aAAP;AAOH;AACJ;AAGJ;;AAGD;AACI,aAAOJ,KAAP;AAlCR;AAoCH,CArCD;;AAwCA,OAAO,MAAMkB,GAAG,GAAG,CAACH,IAAD,EAAOC,IAAP,EAAaC,IAAb,KAAsB;AACrC,SAAO;AACHf,IAAAA,IAAI,EAAEP,OADH;AAEHoB,IAAAA,IAFG;AAEGC,IAAAA,IAFH;AAESC,IAAAA;AAFT,GAAP;AAIH,CALM;AAQP,eAAelB,OAAf","sourcesContent":["const BUYITEM = \"BUY-ITEM\"\n\n\nlet initialState = {\n    item: [],\n    lenght: null\n\n};\n\n\nconst buyItem = (state = initialState, action) => {\n    switch (action.type) {\n        case BUYITEM: {\n\n\n            let n = state.item.length;\n\n\n            function checkAndAdd(name) {\n                var id = action.item.pizza.length + 1;\n                var found = action.item.some(function (el) {\n                    return el.id === id;\n                });\n                if (!found) {\n                    let buyeat = {\n                        _id: n,\n                        eat: action.info,\n                        cost: action.cost,\n                        size: action.size,\n                    }\n                    return {\n\n\n                        ...state,\n                        item: [...state.item, buyeat],\n                        lenght: state.item.length\n                    }\n                }\n            }\n\n\n        }\n\n\n        default:\n            return state;\n    }\n}\n\n\nexport const buy = (info, cost, size) => {\n    return {\n        type: BUYITEM,\n        info, cost, size\n    }\n}\n\n\nexport default buyItem;"]},"metadata":{},"sourceType":"module"}