{"ast":null,"code":"const BUYITEM = \"BUY-ITEM\";\nlet initialState = {\n  item: []\n};\n\nconst buyItem = (state = initialState, action) => {\n  switch (action.type) {\n    case BUYITEM:\n      {\n        let n = state.item.length;\n        let buyeat;\n\n        function add(name) {\n          if (action.info.filter(item => item.username == name).length == 0) {\n            arr.push({\n              id: id,\n              username: name\n            });\n          }\n        }\n\n        return { ...state,\n          item: [...state.item, buyeat]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const buy = (info, cost, size) => {\n  return {\n    type: BUYITEM,\n    info,\n    cost,\n    size\n  };\n};\nexport default buyItem;","map":{"version":3,"sources":["/Users/daloniil/Desktop/React/Pizza/pizzaProject/src/Redux/buy-item-reducer.js"],"names":["BUYITEM","initialState","item","buyItem","state","action","type","n","length","buyeat","add","name","info","filter","username","arr","push","id","buy","cost","size"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAhB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE;AADS,CAAnB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,OAAL;AAAc;AAGV,YAAIO,CAAC,GAAGH,KAAK,CAACF,IAAN,CAAWM,MAAnB;AACA,YAAIC,MAAJ;;AAEA,iBAASC,GAAT,CAAaC,IAAb,EAAmB;AACf,cAAIN,MAAM,CAACO,IAAP,CAAYC,MAAZ,CAAmBX,IAAI,IAAGA,IAAI,CAACY,QAAL,IAAiBH,IAA3C,EAAiDH,MAAjD,IAA2D,CAA/D,EAAiE;AAC7DO,YAAAA,GAAG,CAACC,IAAJ,CAAS;AAAEC,cAAAA,EAAE,EAAEA,EAAN;AAAUH,cAAAA,QAAQ,EAAEH;AAApB,aAAT;AACH;AACJ;;AAGD,eAAO,EAEH,GAAGP,KAFA;AAGHF,UAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBO,MAAhB;AAHH,SAAP;AAKH;;AAGD;AACI,aAAOL,KAAP;AAvBR;AAyBH,CA1BD;;AA6BA,OAAO,MAAMc,GAAG,GAAG,CAACN,IAAD,EAAOO,IAAP,EAAaC,IAAb,KAAsB;AACrC,SAAO;AACHd,IAAAA,IAAI,EAAEN,OADH;AAEHY,IAAAA,IAFG;AAEGO,IAAAA,IAFH;AAESC,IAAAA;AAFT,GAAP;AAIH,CALM;AAQP,eAAejB,OAAf","sourcesContent":["const BUYITEM = \"BUY-ITEM\"\n\nlet initialState = {\n    item: [],\n\n\n};\n\nconst buyItem = (state = initialState, action) => {\n    switch (action.type) {\n        case BUYITEM: {\n\n\n            let n = state.item.length;\n            let buyeat\n\n            function add(name) {\n                if (action.info.filter(item=> item.username == name).length == 0){\n                    arr.push({ id: id, username: name });\n                }\n            }\n\n\n            return {\n\n                ...state,\n                item: [...state.item, buyeat]\n            }\n        }\n\n\n        default:\n            return state;\n    }\n}\n\n\nexport const buy = (info, cost, size) => {\n    return {\n        type: BUYITEM,\n        info, cost, size\n    }\n}\n\n\nexport default buyItem;"]},"metadata":{},"sourceType":"module"}